@model Project_ON_MVC.Models.Order_Details

@{
    ViewBag.Title = "PlaceOrder";
}

<h2>PlaceOrder</h2>

@using (Html.BeginForm("PlaceOrder", "Orders", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Order_Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Order_Valuation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order_Valuation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order_Valuation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Order_Source, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @*    @Html.EditorFor(model => model.Order_Source, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Order_Source, new SelectList(ViewBag.source_1))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Order_Destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
          @*      @Html.EditorFor(model => model.Order_Destination, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Order_Destination, new SelectList(ViewBag.dest_1))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Source_Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Source_Description, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.Source_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dest_Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dest_Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dest_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
